1.自宅PCでVScodeからこのリポジトリを作成してファイルをコミットしようとしたときに、他のリポジトリも表示されていてどうやって現在作業しているリポジトリだけをコミットするのか戸惑いましたが、Desktopと表示されたリポジトリだけ閉じることができて解決しました。

2.文字の折り返しの設定を変更しようとしましたが、以前VScodeにLaTexを導入しようとしてAI任せで設定をいろいろいじっていたのが原因で上手く設定できませんでした。設定関係のjsonファイルに問題があったようで、AIに聞いたら以下のコードを修正してくれました。↓のは問題のあるコードです。
{
    "[python]": {
        "editor.formatOnType": true
    },
    "python.linting.flake8Enabled": true,
    "python.linting.enabled": false,
    "diffEditor.renderSideBySide": false,
    "git.openRepositoryInParentFolders": "never"
}

{
    "latex-workshop.latex.tools": 
    [
        {
            "name": "latexmk", 
            "command": "latexmk", 
            "args": 
            [
                "-pdfdvi", 
                "%DOC%", 
            ],
        },
    ],
    "latex-workshop.latex.recipes": 
    [
        {
            "name": "latexmk", 
            "tools": 
            [
                "latexmk", 
            ]
        },
    ],
    "latex-workshop.latex.clean.fileTypes": 
    [
        "*.aux", "*.bbl", "*.blg", "*.idx", "*.ind", "*.lof", "*.lot", "*.out", "*.toc", "*.acn", "*.acr", "*.alg", 
        "*.glg", "*.glo", "*.gls", "*.ist", "*.fls", "*.log", "*.fdb_latexmk", "*.synctex.gz", 
        "_minted*", "*.nav", "*.snm", "*.vrb", 
    ],
    "latex-workshop.latex.clean.enabled": true,
    "latex-workshop.latex.autoClean.run": "onFailed", 
    "latex-workshop.latex.autoBuild.run": "onFileChange", 
    "latex-workshop.synctex.afterBuild.enabled": true, 
    "latex-workshop.view.pdf.viewer": "tab",
    "tabnine.experimentalAutoImports": true,
    "editor.minimap.enabled": false,
    "window.zoomLevel": 1,
    
}

{
    "terminal.integrated.defaultEncoding": "utf8",
    "files.encoding": "utf8"
}


{
    "python.defaultInterpreterPath": "C:\\Users\\Owner\\AppData\\Local\\Programs\\Python\\Python312\\python.exe"
}

{
    "code-runner.runInTerminal": true
}

3.仮想環境の起動トラブル
実習用PCでpythonの仮想環境を作ろうとした際にターミナルからコマンドで起動しようとしても上手くいかなかった。
cd ~\Desktop\project
Remove-Item -Recurse -Force .\venv
python -m venv venv
Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned
.\venv\Scripts\Activate.ps1
このコマンド群を実行することで仮想環境の構築と起動まで一括でできました。2回目以降は
Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned
.\venv\Scripts\Activate.ps1

Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned
.\venv312\Scripts\Activate.ps1
の2つだけでよいです。python3.12.7で作成したのでvenv312に命名しました。
これはAIによるとPowershellのスクリプト実行ポリシーが問題になっているそうで、一時的に緩和して仮想環境を起動するコマンドだそうです。

4.GitHubでの認証トラブル
家のアカウントと学校のアカウントがあり、家から学校のほうへ招待を送りました。
学校側でファイルを追加・修正したりしてコミットし、pushしようとすると認証が求められました。
認証時に開かれたGoogleChromeが家のアカウントのブラウザになっていたので、進めずに閉じました。
ブラウザへログインしているアカウントを学校のものに揃えてからのほうがいいと判断したためです。
翌日、再び学校側でpushしようとした際には、学校アカウントでログインしているブラウザを立ち上げておきました。
そのブラウザで認証を求められたので、認証を進めようとすると127.0.0.1へのリダイレクトに失敗。
しかし、改めてGitHubを見ると昨日にpushしようとしたものがリモートに反映されていた。


5.実習用PCでsentencepieceがインストールできない問題
pythonの最新版3.13に対応していないようで、仮想環境を作成する際にpythonのバージョンを指定しておく必要があるらしい。
家のPCではpython3.11～13(13は最後に入れた)まですべて入れていて、バージョン3.12で動いていてそれで問題が発生していなかった可能性がある。
仮想環境を一度破棄し、再度作り直そうとするが古いバージョンのpythonをインストールしてパスを通していないといけないよう。
仮想環境 (venv) は、実際にインストールされている Python 実行ファイル（例：python.exe）をコピー（またはリンク）して使うからだそう。
python3.12.7を3.12系の最新のものをPASSを通さずにインストールし、仮想環境構築で
py -3.12 -m venv venv312
で作成し、
pip install sentencepiece
でインストールできました。やはりpythonのバージョンの問題だったようです。


6.PyTorchのインストールとNVIDIAドライバー
PyTorchは仮想環境をPython3.12.7で作り直し、
pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
コマンドで入れ直しました。

ドライバーは以下のようにコマンドで調べてAIからそれで大丈夫と言われました。
C:\Users\iida>nvidia-smi
Sun Jun  1 14:42:54 2025
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 528.92       Driver Version: 528.92       CUDA Version: 12.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name            TCC/WDDM | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA GeForce ... WDDM  | 00000000:01:00.0 Off |                  N/A |
| N/A   37C    P0     8W /  55W |      0MiB /  6144MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

立ち上げた仮想環境で
python pytorch1.py
のコマンドで、
import torch
print(torch.cuda.is_available())        # True ならGPU利用可能
print(torch.cuda.get_device_name(0))   # GPU名が出るはず
と記述したファイルを実行すると、
True
NVIDIA GeForce RTX 3050 6GB Laptop GPU
のように出力され、正常に認識しているようです。

7.VScodeの破損
6月8日にGitでリモートにpushしてPCを閉じ、翌朝9日に開いたらVScodeのアイコンが白いファイルになっていて起動しようとするとcode.exeが見つからなくて起動できないといわれた。
ショートカットを削除するか尋ねられたので削除した。
VScodeを再インストールしたが、設定や拡張機能、Gitとの連携などは引き継がれるみたいで事なきを得た。

8.トークナイザー作成時のエラー
実習用PCでは仮想環境内にSentencePieceを入れているので環境を起動する必要があります。
実行したファイルtrain_tokenizer.pyを参照してほしいが、SentencePieceが内部で管理する特別なトークンをユーザ定義のトークンとしたAIの出力したコードでエラーが出た。
f'--user_defined_symbols={PAD_TOKEN},{SOS_TOKEN},{EOS_TOKEN},{UNK_TOKEN},{NONE_TOKEN} '
から{PAD_TOKEN},{SOS_TOKEN},{EOS_TOKEN},{UNK_TOKEN}まで削除することで正常に動作しました。

次のエラーはVocabulary size is smaller than required_chars. 200 vs 287.
これはエラーメッセージの一部ですが、語彙サイズを200に設定していて、サイズが足りなかったことを示している。
train_tokenizer.pyファイルのVOCAB_SIZE = 300に修正して実行したらうまくいきました。
